import javafx.application.Application;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ListView;
import javafx.scene.control.TextField;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

public class ProductManager extends Application {

    private ListView<Product> productListView;
    private ObservableList<Product> productList;

    @Override
    public void start(Stage primaryStage) {
        primaryStage.setTitle("Product Manager");

        // Tạo các thành phần giao diện
        TextField nameField = new TextField();
        nameField.setPromptText("Product Name");

        TextField priceField = new TextField();
        priceField.setPromptText("Product Price");

        Button addButton = new Button("Add");
        addButton.setOnAction(e -> {
            String name = nameField.getText();
            double price = Double.parseDouble(priceField.getText());
            Product product = new Product(name, price);
            productList.add(product);
            nameField.clear();
            priceField.clear();
        });

        Button editButton = new Button("Edit");
        editButton.setOnAction(e -> {
            Product selectedProduct = productListView.getSelectionModel().getSelectedItem();
            if (selectedProduct != null) {
                String name = nameField.getText();
                double price = Double.parseDouble(priceField.getText());
                selectedProduct.setName(name);
                selectedProduct.setPrice(price);
                productListView.refresh();
                nameField.clear();
                priceField.clear();
            }
        });

        Button deleteButton = new Button("Delete");
        deleteButton.setOnAction(e -> {
            Product selectedProduct = productListView.getSelectionModel().getSelectedItem();
            if (selectedProduct != null) {
                productList.remove(selectedProduct);
                nameField.clear();
                priceField.clear();
            }
        });

        productList = FXCollections.observableArrayList();
        productListView = new ListView<>(productList);
        productListView.getSelectionModel().selectedItemProperty().addListener((obs, oldProduct, newProduct) -> {
            if (newProduct != null) {
                nameField.setText(newProduct.getName());
                priceField.setText(Double.toString(newProduct.getPrice()));
            }
        });

        VBox vBox = new VBox();
        vBox.setSpacing(10);
        vBox.setPadding(new Insets(10, 10, 10, 10));
        vBox.getChildren().addAll(nameField, priceField, new HBox(addButton, editButton, deleteButton), productListView);

        Scene scene = new Scene(vBox, 400, 400);
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    public static void main(String[] args) {
        launch(args);
    }
}
